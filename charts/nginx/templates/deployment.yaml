apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ template "fullname" . }}"
  labels:
    app: "{{ template "fullname" . }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ default 1 .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: "{{ template "fullname" . }}"
        release: "{{ .Release.Name }}"
    spec:
      containers:
      - name: "{{ template "fullname" . }}"
        image: "{{ default "supernami/nginx" .Values.image.repository }}:{{ default "latest" .Values.image.tag }}"
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy | quote }}
        env:
        - name: NAME
          value: "{{ .Values.website.name }}"
        - name: TLD
          value: "{{ .Values.website.tld }}"
        - name: UPSTREAM
          value: "{{ template "drupal-fpm.fullname" . }}"
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.service.httpinternalPort }}
            initialDelaySeconds: 120
            timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.service.httpinternalPort }}
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            {{ include "toYaml" .Values.resources | indent 10 }}
        volumeMounts:
        - name: data
          mountPath: /var/www/html
        - name: config
          mountPath: /etc/nginx
      volumes:
      - name: config
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: "{{ template "fullname" . }}-config"
      {{- else }}
        emptyDir: {}
      {{- end }}
