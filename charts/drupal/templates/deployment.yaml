apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ default "default" .Values.namespace }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ default "1" .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: "{{ template "fullname" . }}"
        release: "{{ .Release.Name }}"
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
            "name": "copy-nginx-files",
            "image": "{{ default "supernami/nginx" .Values.nginx.image.repository }}:{{ default "latest" .Values.nginx.image.tag }}",
            "imagePullPolicy": {{ default "IfNotPresent" .Values.nginx.image.pullPolicy | quote }},
            "command": ["cp", "-a", "/etc/nginx/.", "/opt/"],
            "volumeMounts": [
              {
                "name": "config",
                "mountPath": "/opt"
              }
            ]
          },
          {
            "name": "copy-drupal-files",
            "image": "{{ default "drupal" .Values.drupal.image.repository }}:{{ default "8-fpm" .Values.drupal.image.tag }}",
            "imagePullPolicy": {{ default "IfNotPresent" .Values.drupal.image.pullPolicy | quote }},
            "command": ["/bin/bash", "-c", "cp -a /var/www/html/. /opt/ && chown -R root:root /opt && chmod -R 755 /opt"],
            "volumeMounts": [
              {
                "name": "data",
                "mountPath": "/opt"
              }
            ]
          }
        ]'
    spec:
      containers:
      - name: {{ template "fullname" . }}-nginx
        image: "{{ default "supernami/nginx" .Values.nginx.image.repository }}:{{ default "latest" .Values.nginx.image.tag }}"
        imagePullPolicy: {{ default "IfNotPresent" .Values.nginx.image.pullPolicy | quote }}
        env:
        - name: NAME
          value: "{{ .Values.website.name }}"
        - name: TLD
          value: "{{ .Values.website.tld }}"
        ports:
        - name: http
          containerPort: {{ default 80 .Values.service.httpinternalPort }}
        - name: https
          containerPort: {{ default 443 .Values.service.httpsinternalPort }}
        livenessProbe:
          httpGet:
            path: /
            port: http
            initialDelaySeconds: 120
            timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: http
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            {{ include "toYaml" .Values.resources | indent 10 }}
        volumeMounts:
        - name: data
          mountPath: /var/www/html
        - name: config
          mountPath: /etc/nginx
      - name: {{ template "fullname" . }}-fpm
        image: "{{ default "drupal" .Values.drupal.image.repository }}:{{ default "8-fpm" .Values.drupal.image.tag }}"
        imagePullPolicy: {{ default "IfNotPresent" .Values.drupal.image.PullPolicy | quote }}
        ports:
        - name: php-fpm
          containerPort: {{ default "9000" .Values.drupal.image.internalPort }}
        livenessProbe:
          httpGet:
            path: /
            port: php-fpm
          initialDelaySeconds: 120
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: php-fpm
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
          {{ include "toYaml" .Values.resources | indent 10 }}
        volumeMounts:
        - name: data
          mountPath: /var/www/html
      volumes:
      - name: data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: "{{ .Release.Name }}-data"
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: config
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: "{{ .Release.Name }}-nginx-config"
      {{- else }}
        emptyDir: {}
      {{- end }}
